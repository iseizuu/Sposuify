<UserControl x:Class="Osu.Music.UI.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Osu.Music.UI.Views"
             xmlns:controls="clr-namespace:Osu.Music.UI.UserControls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:utility="clr-namespace:Osu.Music.UI.Utility"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="563.2" d:DesignWidth="1039"
             x:Name="Main">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding OnLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <!--TitleBar-->
        <Grid Grid.ColumnSpan="2" Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Margin="13 0 0 0" Padding="5 0 5 0" HorizontalAlignment="Left" VerticalAlignment="Top" 
                    Background="{DynamicResource SolidColorBrushMain}" CornerRadius="0 0 10 10">
                <Button Style="{DynamicResource SidebarButtonOsu}" Command="{Binding OpenAboutCommand}">
                    <Button.ToolTip>
                        <TextBlock Text="About"/>
                    </Button.ToolTip>
                </Button>
            </Border>
            <Button Style="{DynamicResource SettingsButton}" Command="{Binding OpenSettingsCommand}" HorizontalAlignment="Right">
                <Button.ToolTip>
                    <TextBlock Text="Settings"/>
                </Button.ToolTip>
            </Button>
            <StackPanel Grid.Column="1"  HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{StaticResource TitleBarUpdates}" Visibility="{Binding DataContext.Updater.State, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Converter={StaticResource UpdateStateToVisibilityConverter}, FallbackValue=Collapsed}"
                        Command="{Binding DataContext.UpdateAppCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                    <Button.ToolTip>
                        <TextBlock Text="Update osu.Music"/>
                    </Button.ToolTip>
                </Button>

                <Border Background="{DynamicResource SolidColorBrushMain}" CornerRadius="5 5 0 0" Height="24">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Height="34" Width="91">
                        <TextBlock Text="YukiMod" Style="{DynamicResource MenuHeader}" FontSize="16" Foreground="White" RenderTransformOrigin="0.5,0.5" Width="67" Height="22">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="0" X="0"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </StackPanel>
                </Border>
                <Button Style="{StaticResource TitleBarMinimize}" Command="{Binding MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Button x:Name="MaximizeButton" Style="{StaticResource TitleBarMaximize}" Command="{Binding MaximizeOrRestoreCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=MaximizeButton}"/>
                <Button x:Name="RestoreButton" Style="{StaticResource TitleBarRestore}" Command="{Binding MaximizeOrRestoreCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=MaximizeButton}"
                        Visibility="{Binding Path=Visibility, ElementName=MaximizeButton, Converter={StaticResource ReverseVisibilityConverter}, FallbackValue=Collapsed}"/>
                <Button Style="{StaticResource TitleBarClose}" Command="{Binding CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
            </StackPanel>
        </Grid>

        <Grid HorizontalAlignment="Center" Grid.Row="1" Margin="0,14,0,14" Width="250">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="250"/>
            </Grid.RowDefinitions>
            <Image Source="pack://application:,,,/Osu.Music.UI;component/Resources/Images/sidebar-background.png" HorizontalAlignment="Center" Margin="0,155,0,99" Width="240" Grid.RowSpan="2" Grid.ColumnSpan="2" VerticalAlignment="Center"/>
            <Rectangle Style="{DynamicResource RectangleStyle1}" Opacity="0.438" Grid.RowSpan="2" Fill="#FF0C0028" Stroke="#FF35005F" StrokeThickness="2" AutomationProperties.IsOffscreenBehavior="Onscreen" Grid.ColumnSpan="2" Margin="0,0,0,-34"/>
            <ContentPresenter x:Name="contentPresenter" Grid.Row="1" Content="{Binding Visualization.Content}" Margin="0,20,0,-34" Grid.ColumnSpan="2"/>
        </Grid>

        <ContentControl Content="{Binding SelectedPage}" Grid.Column="1" Grid.Row="1" Margin="0,38,0,0" Grid.RowSpan="2">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ProgressChanged">
                    <prism:InvokeCommandAction Command="{Binding ScrollBeatmapCommand}" TriggerParameterPath="Progress" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ContentControl>

        <Grid Grid.Row="3" Grid.ColumnSpan="2" Background="{DynamicResource SolidColorBrushMain}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="223.8"/>
                <ColumnDefinition Width="126.2"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="350"/>
            </Grid.ColumnDefinitions>
            <TextBlock FontFamily="{DynamicResource Roboto}" Foreground="{DynamicResource SolidColorBrushMain}" 
                               FontSize="16" FontWeight="DemiBold" Margin="7,10,114,10" DockPanel.Dock="Left"
                               Text="Songs" Grid.ColumnSpan="2"/>
            <TextBox x:Name="SearchField" Style="{DynamicResource SearchText}" Grid.Column="1" MinWidth="200" HorizontalAlignment="Left" Margin="28,0,0,0" Width="197" Background="{DynamicResource SolidColorBrushMainLight}" Grid.ColumnSpan="2">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding DataContext.SearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainView}}}" 
                                        CommandParameter="{Binding ElementName=SearchField, Path=Text}"
                                        Key="Return"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Style="{DynamicResource PlaylistAction}" Foreground="{DynamicResource SolidColorBrushMain}" Content="&#xe8b6;" FontSize="18"
                            HorizontalAlignment="Right" Margin="0 0 10 0" Grid.Column="2"
                            Command="{Binding DataContext.SearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainView}}}"
                            CommandParameter="{Binding ElementName=SearchField, Path=Text}"/>
            <StackPanel Grid.Column="0" VerticalAlignment="Center" Orientation="Horizontal" Margin="5,0,106,0" Grid.ColumnSpan="2">
                <StackPanel Orientation="Vertical">
                    <TextBlock Style="{DynamicResource PlayerBeatmapTitle}" Text="{Binding Model.PlayingBeatmap.Title}" FontFamily="Franklin Gothic Demi"/>
                    <TextBlock Style="{DynamicResource PlayerBeatmapArtist}" Text="{Binding Model.PlayingBeatmap.Artist}"/>
                </StackPanel>
            </StackPanel>
            <StackPanel VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Left" Margin="45,-108,0,0">
                <Button Style="{DynamicResource PlayerButtonPrevious}" Command="{Binding PreviousBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonStop}" Command="{Binding StopBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonPlay}" Command="{Binding PlayBeatmapCommand}" CommandParameter="{Binding Model.SelectedBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonPause}" Command="{Binding PauseBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonNext}" Command="{Binding NextBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
            </StackPanel>
            <StackPanel Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Orientation="Horizontal" Margin="130,0,0,0">
                <ToggleButton Style="{DynamicResource PlayerToggleButtonVolume}" Command="{Binding MuteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                              IsChecked="{Binding Playback.Mute}"/>
                <Slider Style="{DynamicResource VolumeSlider}" Minimum="0" Maximum="1" Value="{Binding Playback.Volume}" IsMoveToPointEnabled="True" Margin="0 0 5 0"/>
                <ToggleButton Style="{DynamicResource PlayerToggleButtonShuffle}" IsChecked="{Binding Playback.Shuffle}"/>
                <ToggleButton Style="{DynamicResource PlayerToggleButtonRepeat}" IsChecked="{Binding Playback.Repeat}"/>
            </StackPanel>
            <controls:BeatmapProgressBar Grid.ColumnSpan="3" Total="{Binding Model.TotalTime}" Current="{Binding Model.CurrentTime}" Progress="{Binding Model.Progress}" Margin="28,20,225,20" Grid.Column="1" Foreground="{DynamicResource SolidColorBrushMainBorder}" OpacityMask="{DynamicResource MaterialDesignDarkForeground}" BorderBrush="Black" Background="Black" Grid.Row="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ProgressChanged">
                        <prism:InvokeCommandAction Command="{Binding ScrollBeatmapCommand}" TriggerParameterPath="Progress" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls:BeatmapProgressBar>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="832" Height="38">
            <ToggleButton Style="{DynamicResource SidebarButtonAllSongs}" IsChecked="{Binding SelectedPage, ConverterParameter=SongsViewModel, Converter={StaticResource SelectedPageToToggleCheckCovnerter}, Mode=OneWay}" Command="{Binding OpenPageCommand}" CommandParameter="Songs" Width="163"/>
            <ToggleButton Style="{DynamicResource SidebarButtonPlaylists}" IsChecked="{Binding SelectedPage, ConverterParameter=PlaylistsViewModel, Converter={StaticResource SelectedPageToToggleCheckCovnerter}, Mode=OneWay}" Command="{Binding OpenPageCommand}" CommandParameter="Playlists" Width="150"/>
            <ToggleButton Style="{DynamicResource SidebarButtonCollection}" IsChecked="{Binding SelectedPage, ConverterParameter=CollectionsViewModel, Converter={StaticResource SelectedPageToToggleCheckCovnerter}, Mode=OneWay}" Command="{Binding OpenPageCommand}" CommandParameter="Collections" Width="194"/>
            <ToggleButton Style="{DynamicResource SidebarButtonSearch}" IsChecked="{Binding SelectedPage, ConverterParameter=SearchViewModel, Converter={StaticResource SelectedPageToToggleCheckCovnerter}, Mode=OneWay}" Command="{Binding OpenPageCommand}" CommandParameter="Search" Width="201"/>
        </StackPanel>
    </Grid>
</UserControl>
